/**
 */
module.exports = {
    success: {
        code: 200,
        message: ''
    },
    created: {
        code: 201,
        message: 'Created'
    },
    accepted: {
        code: 202,
        message: 'Accepted'
    },
    nocontent: { // this can be use in empty response also
        code: 204,
        message: 'No Content'
    },
    Unauthorized: { // this can be use in empty response also
        code: 401,
        message: 'Authentication Failed'
    },
    forbidden: {
        code: 403,
        message: 'Forbidden'
    },
    conflict: {
        code: 409, //Conflict in delete + insert + update
        message: 'Conflict Occurred'
    },
    preconditonfailed: {
        code: 412, //The server does not meet one of the preconditions that the requester put on the request.
        message: 'Validation failed'
    },
    internalError: {
        code: 500,
        message: 'There is some problem please try again later'
    },
    authFailed: {
        sessionExpired: 'Session is expire ,please login again',
        userInfoFailed: 'Unauthorized user',
        basicTokenSuccess: 'Basic token has been generated successfully',
        basicTokenFailed: 'Failed to generate basic token'
    },
    userMessages: {
        registerSuccess: 'User registered successfully',
        updateSuccess: 'User updated successfully',
        updateActiveSuccess: 'User activated successfully',
        updateDeactiveSuccess: 'User deactivated successfully',
        updateProfilePicSuccess: 'Profile Picture updated Successfully',
        deleteSuccess: 'User deleted Successfully',
        propertyArrayError: 'Properties should be an array',
        propertyNotValid: 'Please pass valid properties',
        addProblem: 'Unable to add user now,please try again',
        updateProblem: 'Unable to update user data,please try again',
        deleteProblem: 'Unable to delete user data,please try again',
        notExist: 'User Not exists',
        notActive: 'User Not active',
        userAlreadyActive: 'User is already active',
        userAlreadyDeactive: 'User is already deactive',
        emailExist: 'This email address already exists',
        emailNotExist: 'Email address doesnâ€™t exists',
        userCount: 'User count loaded successfully',
        uploadProfilepic: 'Please upload profile picture',
        invalidExtension: 'Invalid extension of file',
        listSuccess: 'User list loaded successfully',
        propertyListSuccess: 'Property list loaded successfully',
        passwordUpdated: 'Password Updated successfully',
        passwordFailed: 'Unable to update password',
        passwordNotValid: 'Old password is wrong please try again',
        infoSuccess: 'User details loaded successfully',
        userSuccess: 'User profile loaded successfully',
        invitationNotFound: 'Invitation link is expired',
        LookupListSuccess: 'User list loaded successfully',
        uploadUserFile: 'Please upload user file',
        uploadCSVFileError: 'Please upload only CSV file',
        uploadCSVFileSuccess: 'Upload users successfully',
        uploadCSVFileParamsError: 'Please verify your CSV file, all field should not be empty',
        duplicateEmailExists: 'Duplicate email exists',
        emailAlreadyExists: 'Email already exists',
        roleNotFound: 'Role not found',
        userProfileContainer: 'Failed to load azure user container information',
        invalidImportbatchguid: 'Invalid importbatch guid'
    },
    deviceMessages: {
        listSuccess: 'Device list loaded successfully',
        infoSuccess: 'Device information loaded successfully',
        updateSuccess: 'Device updated successfully',
        deviceCount: 'Device count loaded successfully',
        infoUpdateSuccess: 'Device information updated successfully',
        propertyArrayError: 'Properties should be an array',
        propertyNotValid: 'Please pass valid properties',
        changeSuccess: 'Device reporting group changed successfully',
        lastActivityDateSuccess: 'Device last activity date update successfully',
        getDeviceByParam: 'get device detail successfully',
        getDeviceByParamError: 'Failed to load devices detail',
        getDeviceByFirmwareUpgrade: 'get device detail by firmware upgrade successfully',
        getDeviceByFirmwareUpgradeError: 'Failed to load devices detail by firmware upgrade',
        getDeviceByDeviceTemplate: 'get device detail by device template successfully',
        getDeviceByDeviceTemplateError: 'Failed to load devices detail by device template',
        getDeviceByReportingGroup: 'get device detail by user'+ "'"+'s reporting group successfully',
        getDeviceByReportingGroupError: 'Failed to load devices detail by reporting group',
        getDeviceByEntityError: 'Failed to load devices detail by entity',
        updateDeviceByReportingGroupError: 'Failed to update devices by reporting group',
        deviceCountByReportingGroupSuccess: 'Device count by reporting group loaded successfully',
        deleteSuccess: 'Device deleted successfully',
        deleteIssue: 'Unable to delete device details, please try again',
        updateActiveSuccess: 'Device activated successfully',
        updateDeactiveSuccess: 'Device deactivated successfully',
        alreadyActive: 'Device is already active',
        alreadyDeactive: 'Device is already deactive',
        notExist: 'Device not exist',
        createSuccess: 'Device created successfully',
        createFail: 'Error occurred while creating device',
        propertyListSuccess: 'Property list loaded successfully',
        updateBrokerInfoSuccess: 'Device broker info updated successfully',
        updateBrokerInfoIssue: 'UnadeviceSyncSuccessble to Device broker info, please try again',
        deviceSyncSuccess: 'Device sync data successfully',
        uniqueIdFail: "Unique Id does not allow space."
    },
    dpsMessage: {
        importBatchSuccess: 'Batch created successfully',
        updateStatus: 'Batch status updated successfully',
        importItemSuccess: 'Import items created successfully',
        showAllPendingDevices: 'Import Items load Successfully',
        propertiesImportSuccess: 'Properties has been imported successfully.',
        importItemError: 'Error occurred while generating import item',
        invalidImportbatchguid: 'Invalid importbatch guid',
        invalidJsonData: 'Invalid json data',
        noImportItems: 'Unable to found import items',
        confirmDevice: 'confirm device successfully',
        invalidFile: 'Invalid file',
        verifiedFile: 'Imported file verified successfully',
        invalidFileContent: 'Invalid file content',
        dtCodeRequired: 'Device template code should be required',
        nameShouldNotBeEmpty: 'Device name should be required',
        nameOrUniqueIdEmpty: 'Device name or unique Id should be required',
        propertyShouldNotBeEmpty: 'Device property key should be required',
        invalidUniqueId: 'Device unique Id should not allow space',
        duplicateUniqueId: 'Device unique Id should not allow duplicate value',
        invalidJSON: 'Invalid JSON',
        listImportBatch: 'Import batch loaded successfully',
        syncStatusAndCountSuccess: 'Device sync status information get successfully',
        propertyCreateFailed: 'Property type insert operation failed',
        typeAlreadyExist: 'Property type is already exists',
        importBatchGuidNotFound: 'Import batch not found',
        importBatchContainer: 'Failed to load azure import batch container information'
    },
    invitationMessage: {
        addSuccess: 'Invititation created sucessfully',
        updateSuccess: 'Invititation updated sucessfully',
        invitationExpired: 'Invitation link is expired',
        createIssue: 'Unable to create invitation, Please try again',
        updateIssue: 'Unable to update invitation, Please try again',
        invitationSent: 'Invitation already sent',
        invitationNotFound: 'Invitation not found'
    },
    templateMessages: {
        listSuccess: 'Device template list loaded successfully',
        infoSuccess: 'Device template information loaded successfully',
        addSuccess: 'Device template created successfully',
        codeExist: 'Device template code already exist',
        datatypeSuccess: 'Datatype loaded successfully',
        deleteSuccess: 'Device template deleted successfully',
        deleteIssue: 'Unable to delete device template data, please try again',
        updateSuccess: 'Device template updated successfully',
        notFound: 'Device template not found',
        updateFailed: 'Unable to update device template, Please try again'
    },
    templateAttributeMessages: {
        addSuccess: 'Device template attribute created successfully',
        updateSuccess: 'Device template attribute updated successfully',
        updateFailed: 'Error occurred while updating device template attribute',
        addFailed: 'Error occurred while creating device template attribute',
        listSuccess: 'Device template attribute loaded successfully',
        AttributeLocalNameAlreadyExists: 'Attribute local name already exists',
        notValidTemplate: 'Please enter valid device template',
        TemplateAttributeNotFound: 'Please enter valid template attribute',
        notValidDataType: 'Please enter valid data type',
        notValidAttribute: 'Please enter valid device template attribute',
        sequenceUpdateSuccess: 'Device template attribute sequence updated successfully',
        deleteSuccess: 'Template attribute deleted successfully',
        deleteIssue: 'Unable to delete template attribute'
    },
    templateCommandMessages: {
        addSuccess: 'Device template command created successfully',
        updateFailed: 'Device template command updated failed,Try again later',
        addFailed: 'Device template command add failed,Try again later',
        updateSuccess: 'Device template command updated successfully',
        listSuccess: 'Device template command loaded successfully',
        notValidTemplate: 'Please enter valid device template',
        deleteSuccess: 'Template command deleted successfully',
        deleteIssue: 'Unable to delete template command data, please try again',
    },
    templateSettingMessages: {
        addSuccess: 'Device template setting created successfully',
        updateSuccess: 'Device template setting updated successfully',
        updateFailed: 'Device template setting updated failed,Try again later',
        addFailed: 'Device template setting add failed,Try again later',
        listSuccess: 'Device template setting loaded successfully',
        notValidTemplate: 'Please enter valid device template',
        notValidDataType: 'Please enter valid data type',
        InvaliddefaultValue: 'Please enter valid default type',
        TemplateSettingNotFound: 'Template Setting Not Found',
        NameOrLocalnameAlreadyExists: 'Template setting Name Or Local name Already Exists',
        deleteSuccess: 'Template setting deleted successfully',
        deleteIssue: 'Unable to delete template setting data, please try again'
    },
    roleMessage: {
        addSuccess: 'Role added successfully',
        addProblem: 'Unable to add role now,please try again',
        roleAlreadyExists: 'Role already exist',
        statusUpdateSuccess: 'Role status updated successfully',
        roleStatusAlreadyUpdated: 'Role status already updated',
        updateSuccess: 'Role updated successfully',
        loadSuccess: 'Role list loaded successfully',
        noRole: 'There are no role available',
        deleteSuccess: 'Role deleted successfully',
        deleteIssue: "Users are associated with the role so role can't be deleted",
        roleNotFound: 'No role found with this id',
        roleNotActive: 'Selected Role is not active',
        usersAssociatedWithRole: 'Status canâ€™t be modified as users are associated with this user role'
    },
    firmwareMessage: {
        validateSuccess: 'Firmware validate successfully',
        infoSuccess: 'Firmware detail loaded successfully',
        addSuccess: 'Firmware added successfully',
        updateSuccess: 'Firmware updated successfully',
        addUpgradeSuccess: 'Firmware Upgrade added successfully',
        firmwareCodeExists: 'Firmware code already exists',
        firmwareVersionExists: 'Firmware version already exists',
        firmwareMinorVersionExists: 'Firmware minor version already exists',
        firmwareaddProblem: 'There is some problem for adding firmware, please try again',
        firmwareupdateProblem: 'There is some problem for updating firmware, please try again',
        listSuccess: 'Firmware list loaded successfully',
        upgradeListSuccess: 'Firmware upgrade list loaded successfully',
        uploadFirmwareFile: 'Please upload firmware file',
        invalidProperty: 'Please pass valid property',
        OTAUpdatelistSuccess: 'OTAUpdate list loaded successfully',
        OTAUpdateSendSuccess: 'OTAUpdate send successfully',
        OTAUpdateSendIssue: 'Unable to send OTAUpdate, Please try again',
        OTAUpdateHistorySuccess: 'OTA Update history of last 10 devices loaded successfully',
        OTAUpdateInfoSuccess: 'OTAUpdate details loaded successfully',
        firmwareValidateFailed: 'Please add firmware validate details',
        firmwareDetailsNotValid: 'Please add valid firmware details',
        firmwareAlreadyExists: 'Firmware already exists',
        OTAUpdateItemUpdateStatusSuccess: 'Firmware status updated successfully',
        firmwareNotFound: 'There are no firmware found',
        FirmwareMajorVersionCanNotUpdate: 'You can not update major version.',
        FirmwareStatusCanNotUpdate: 'Status already changed to released.',
        updateFirmwareSuccess: 'Firmware upgrade updated successfully',
        firmwareMinorVersionReleased: 'Firmware minor version already released',
        firmwareUpgradeDetailsSuccess: 'Firmware upgrade details loaded successfully',
        publishFirmwareUpgradeSuccess: 'Publish firmware upgrade successfully',
        publishFirmwareUpgradeIssue: 'Unable to Publish firmware upgrade ,please try again',
        firmwareUpgradeNotFound: 'firmwareUpgradeGuid is not found',
        firmwareUpgradeAlreadyPublished: 'Firmware upgrade already published',
        deleteSuccess:"Firmware deleted successfully",
        deleteIssue: "There is an issue to delete firmware",
        FirmwareUpgradeNotFound:"Please enter valid firmware upgrade",
        ReleasedFirmwareUpgradeCanNotDelete: "You are unable to remove RELEASED firmware upgrade",
        SingleFirmwareUpgradeCanNotDelete: "You are unable to remove firmware who has only one firmware upgrade",
        firmwareContainer: 'Failed to load azure firmware container information'
    },
    reportingGroupMessage: {
        createSuccess: 'Device reporting group created successfully',
        listSuccess: 'Device reporting group list loaded successfully',
        updateSuccess: 'Device reporting group updated successfully',
        updateFailed: 'Failed to update reporting group',
        reportingGroupAlreadyUpdated: 'Device reporting group already exists',
        addProblem: 'Unable to update reporting group now,please try again',
        getDetailSuccess: 'Get detail successfully',
        assignAndRemoveUserSuccess: 'Assign/remove users to/from reporting group successfully',
        assignAndRemoveUserFailed: 'Unable to Assign/remove users to/from reporting group, please try again',
        createFailed: 'Failed to create device reporting group',
        duplicateReportingGroup: 'Device reporting group is already exists',
        deleteSuccess: 'Device reporting group deleted successfully',
        deleteIssue: 'Unable to delete device reporting group data,please try again',
        ParentReportingGroupNotExists: 'parent reporting group is not exist'
    },
    entityMessage: {
        createSuccess: 'Entity created successfully',
        listSuccess: 'Entity list loaded successfully',
        updateSuccess: 'Entity updated sucessfully',
        updateFailed: 'Failed to update entity',
        entityAlreadyUpdated: 'Entity already exists',
        addProblem: 'Unable to update entity now,please try again',
        getDetailSuccess: 'Get detail successfully',
        assignAndRemoveUserSuccess: 'Assign/remove users to/from entity successfully',
        assignAndRemoveUserFailed: 'Unable to Assign/remove users to/from entity, please try again',
        createFailed: 'Failed to creating entity',
        duplicateEntity: 'Entity is already exists',
        deleteSuccess: 'Entity deleted successfully',
        deleteIssue: 'Unable to delete entity, please try again',
        EntityNotFound: 'Entity Not Found',
        EntityAlreadyAssignToUser: 'Cannot delete, User is already assigned to this entity',
        ChildEntityExists: 'Unable to remove entity which have child',
        ParentEntityNotExists: 'Parent entity is not exist',
        ParentAndChildEntityCannotBeSame: 'Parent And Child Entity Can not Be Same'
    },
    entityGroupMessage: {
        createSuccess: 'Device entity group created successfully',
        listSuccess: 'Device entity group list loaded successfully',
        updateSuccess: 'Device entity group updated successfully',
        updateFailed: 'Failed to update entity group',
        entityGroupAlreadyUpdated: 'Device entity group already exists',
        addProblem: 'Unable to update entity group now,please try again',
        getDetailSuccess: 'Get detail successfully',
        assignAndRemoveUserSuccess: 'Assign/remove users to/from entity group successfully',
        assignAndRemoveUserFailed: 'Unable to Assign/remove users to/from entity group, please try again',
        createFailed: 'Failed to create device entity group',
        duplicateReportingGroup: 'Device entity group is already exists',
        deleteSuccess: 'Device entity group deleted successfully',
        deleteIssue: 'Unable to delete device entity group data,please try again',
        ParentEntityGroupNotExists: 'parent entity group is not exist'
    },
    masterMessage: {
        timezoneList: 'Timezone loaded successfully',
        stateList: 'State loaded successfully',
        countryList: 'Country loaded successfully',
        createSuccess: 'Timezone added successfully'
    },
    moduleMessage: {
        listSuccess: 'Module list loaded successfully',
        moduleArrayError: 'Properties should be an array',
        moduleNotValid: 'Please pass valid properties',
        moduleLengthError: 'Please select atleast one module',
        addSuccess: 'Role module permission added successfully',
        roleAlreadyExists: 'Role with this name already exists',
        companyNotFound: 'No company found with this id',
        roleNotFound: 'No role found with this id',
        roleNotActive: 'Selected Role is not active',
        modulePermissionNotFound: 'Selected permission is not exists',
        permisssionListSuccess: 'Role Module Permission loaded successfully',
    },
    MQMessage: {
        validateSuccess: 'MQ validate successfully',
        infoSuccess: 'Data Publish successfully'
    },
    fileMessage: {
        uploadSuccess: "File uploaded successfully",
        uploadFail:"Unable to upload file, please try again",
        uploadFile: 'Please upload file',
        fileContainer: 'Failed to load azure file container information'
    },
    notificationMessages: {
        sendMailSuccess: 'Email send successfully'
    },
    agentMessages: {
        listSuccess: 'All sync are loaded successfully'
    },
    configMessages: {
        configSyncSuccess: 'Config sync data successfully'
    }
};